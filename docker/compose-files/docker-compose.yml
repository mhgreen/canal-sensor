version: '3.5'
    #based on https://github.com/dominikrys/docker-influxdb-grafana-traefik/blob/main/docker-compose.yml
    # and https://github.com/riogezz/traefik-docker/blob/master/docker-compose.yml
x-shared-influxdb-variables: &shared-influxdb-variables
    INFLUXDB_DB: ${INFLUXDB_DB}
    INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USERNAME}
    INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
    INFLUXDB_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN}
    INFLUXDB_ORG: ${INFLUXDB_ORG}
    INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
    INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}

services:
  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: ${TRAEFIK_CONTAINER_NAME}
    restart: ${TRAEFIK_RESTART}
    command:
      - --global.sendAnonymousUsage
      - --api=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/dynconf
      - --providers.file.watch=true
      - --log.level=${TRAEFIK_LOG}
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.influxdb-port.address=:${INFLUXDB_PORT}
      - --entrypoints.grafana-port.address=:${GRAFANA_PORT}
      - --certificatesresolvers.${PROVIDER}.acme.tlschallenge=true
      - --certificatesresolvers.${PROVIDER}.acme.dnschallenge=true
      - --certificatesresolvers.${PROVIDER}.acme.dnschallenge.provider=${PROVIDER}
      - --certificatesresolvers.${PROVIDER}.acme.dnschallenge.delayBeforeCheck=0
      - --certificatesresolvers.${PROVIDER}.acme.dnschallenge.resolvers=${RESOLVER}
      - --certificatesresolvers.${PROVIDER}.acme.email=${EMAIL}
      - --certificatesresolvers.${PROVIDER}.acme.storage=/certs/acme.json
    environment:
      - TZ
      - AWS_ACCESS_KEY_ID
      - AWS_REGION
      - AWS_SECRET_ACCESS_KEY
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/certs
      - /home/ubuntu/docker/traefik:/dynconf
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      # Declaring the user list
      #
      # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      # https://doc.traefik.io/traefik/operations/dashboard/
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_ADMIN}"
      # default route over https
      - "traefik.http.routers.dashboard.tls.options=default"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${ACTIVE_DOMAIN}`)"

      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.tls.certresolver=${PROVIDER}"
        # HTTP to HTTPS
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.dashboard-redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.dashboard-redirs.entrypoints=http"
      - "traefik.http.routers.dashboard-redirs.middlewares=redirect-to-https"

  influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    container_name: ${INFLUXDB_CONTAINER_NAME}
    restart: ${INFLUXDB_RESTART}
    ports:
      - "${INFLUXDB_PORT}:${INFLUXDB_PORT}"
    volumes:
        - type: volume
          source: influxdb-data
          target: /var/lib/influxdb

        - type: bind
          source: ../influxdb/docker-entrypoint-initdb.d
          target: /docker-entrypoint-initdb.d
          read_only: true
    environment:
      INFLUXDB_META_DIR: /var/lib/influxdb/meta
      INFLUXDB_DATA_DIR: /var/lib/influxdb/data
      INFLUXDB_DATA_WAL_DIR: /var/lib/influxdb/data
      INFLUXDB_DATA_MAX_SERIES_PER_DATABASE: 0
      INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0
      INFLUXDB_DATA_SERIES_ID_SET_CACHE_SIZE: 100
      INFLUXDB_HTTP_BIND_ADDRES: ${INFLUXDB_PORT}
      INFLUXDB_HTTP_ENABLED: "true"
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_TLS_CERT: ""
      INFLUXDB_TLS_KEY: ""
      << : *shared-influxdb-variables
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.port=${INFLUXDB_PORT}"
      # default route over https
      - "traefik.http.routers.influxdb.entrypoints=https"
      - "traefik.http.routers.influxdb.tls.options=default"
      - "traefik.http.routers.influxdb.rule=Host(`influxdb.${ACTIVE_DOMAIN}`)"
      - "traefik.http.routers.influxdb.tls.certresolver=${PROVIDER}"
      - "traefik.http.routers.influxdb-VPC.entrypoints=influxdb-port"
      - "traefik.http.routers.influxdb-VPC.rule=Host(`ip-172-31-4-86.us-west-2.compute.internal`)"
      - "traefik.http.routers.influxdb-VPC.service=influxdb-vpc-service"
      - "traefik.http.services.influxdb-vpc-service.loadBalancer.server.port=${INFLUXDB_PORT}"
        # HTTP to HTTPS
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.influxdb-redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.influxdb-redirs.entrypoints=http"
      - "traefik.http.routers.influxdb-redirs.middlewares=redirect-to-https"

  influxdb_cli:
    links:
      - influxdb
    image: influxdb:${INFLUXDB_VERSION}
    container_name: ${INFLUXDB_CONTAINER_NAME}_cli
    volumes:
        - type: volume
          source: influxdb-data
          target: /var/lib/influxdb
    environment:
      INFLUXDB_META_DIR: /var/lib/influxdb/meta
      INFLUXDB_DATA_DIR: /var/lib/influxdb/data
      INFLUXDB_DATA_WAL_DIR: /var/lib/influxdb/data
      << : *shared-influxdb-variables
    entrypoint: ["./entrypoint.sh"]
    depends_on:
      - influxdb

  telegraf:
    links:
      - influxdb
    image: telegraf:${TELEGRAF_VERSION}
    container_name: ${TELEGRAF_CONTAINER_NAME}
    restart: ${TELEGRAF_RESTART}
    command:
      --config /etc/telegraf/telegraf.conf
      --config-directory /etc/telegraf/telegraf.d
    volumes:
      - type: bind
        source: ../telegraf/provisioning/
        target: /etc/telegraf/
        read_only: true
    environment:
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_CANAL_BUCKET: ${INFLUXDB_CANAL_BUCKET}
      INFLUXDB_CANAL_TOKEN: ${INFLUXDB_CANAL_TOKEN}
      INFLUXDB_WEATHER_BUCKET: ${INFLUXDB_WEATHER_BUCKET}
      INFLUXDB_WEATHER_TOKEN: ${INFLUXDB_WEATHER_TOKEN}
      INFLUXDB_TIDES_BUCKET: ${INFLUXDB_TIDES_BUCKET}
      INFLUXDB_TIDES_TOKEN: ${INFLUXDB_TIDES_TOKEN}
      OPENWM_KEY: ${OPENWM_KEY}
    depends_on:
      - influxdb_cli

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: ${GRAFANA_CONTAINER_NAME}
    restart: ${GRAFANA_RESTART}
    volumes:
      - type: volume
        source: grafana-data
        target: /var/lib/grafana

      - type: bind
        source: ../grafana/provisioning
        target: /etc/grafana/provisioning
        read_only: true

      - type: bind
        source: ../grafana/provisioning/grafana.ini
        target: /etc/grafana/grafana.ini
        read_only: true
    environment:
        GF_PATHS_DATA: /var/lib/grafana
        GF_PATHS_PLUGINS: /var/lib/grafana/plugins
        GF_PATHS_PROVISIONING: /etc/grafana/provisioning

        GF_SERVER_HTTP_PORT: ${GRAFANA_PORT}
        GF_SERVER_MONITORING_DOMAIN: ${ACTIVE_DOMAIN}
        GF_SERVER_ROOT_URL: https://grafana.${ACTIVE_DOMAIN}

        GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USERNAME}
        GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
        GF_SERVER_DOMAIN: grafana.${ACTIVE_DOMAIN}

        GF_AUTH_DISABLE_LOGIN_FORM: true

        GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: true
        GF_AUTH_GENERIC_OAUTH_ENABLED: true
        GF_AUTH_GENERIC_OAUTH_NAME: "Auth0"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://${GRAFANA_AUTH0_DOMAIN}/oauth/token
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://${GRAFANA_AUTH0_DOMAIN}/authorize
        GF_AUTH_GENERIC_OAUTH_API_URL: https://${GRAFANA_AUTH0_DOMAIN}/userinfo
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${GRAFANA_OAUTH_CLIENT_ID}
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${GRAFANA_OAUTH_CLIENT_SECRET}

        GF_LOG_MODE: console

        # Variables for setting up the InfluxDB data source
        << : *shared-influxdb-variables
    depends_on:
        - influxdb
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entryPoints=grafana-port"
      # default route over https
      - "traefik.http.routers.grafana.tls.options=default"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${ACTIVE_DOMAIN}`)"

      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls.certresolver=${PROVIDER}"
        # HTTP to HTTPS
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana-redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.grafana-redirs.entrypoints=http"
      - "traefik.http.routers.grafana-redirs.middlewares=redirect-to-https"
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.services.grafana-service.loadBalancer.server.port=${GRAFANA_PORT}"

volumes:

  certs:
    driver: local

  influxdb-data:
    external: false

  grafana-data:
    external: false

networks:
  main:
    driver: bridge
